name: CD

on:
  push:
    branches: [ main ]

jobs:
  docker-build-push:
    name: Build and push image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/website

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Remote compose deploy
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync files to server via rsync
        uses: burnett01/rsync-deployments@7.1.5
        with:
          switches: -avzr --delete
          path: |
            docker-compose.yml
            traefik/
          remote_path: ${{ secrets.REMOTE_DIR }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      - name: Deploy via SSH (docker compose up)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            mkdir -p ${{ secrets.REMOTE_DIR }}
            cd ${{ secrets.REMOTE_DIR }}
            export DOMAIN=${{ secrets.DOMAIN }}
            export TRAEFIK_EMAIL=${{ secrets.TRAEFIK_EMAIL }}
            export GITHUB_REPOSITORY=${{ github.repository }}
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose pull || true
            docker compose up -d --build
            docker image prune -f
