name: CD

on:
  push:
    branches: [ main ]

jobs:
  docker-build-push:
    name: Build and push image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/website
          tags: |
            type=raw,value=main
            type=raw,value=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Remote compose deploy
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        shell: bash
        run: |
          mkdir -p ~/.ssh
          install -m 600 /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Ensure remote deploy dir
        shell: bash
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            "mkdir -p '${{ secrets.REMOTE_DIR }}/app'"

      - name: Rsync files to server (safe)
        shell: bash
        run: |
          # Create .env file locally for rsync
          echo "DOMAIN=${{ secrets.DOMAIN }}" > .env
          echo "TRAEFIK_EMAIL=${{ secrets.TRAEFIK_EMAIL }}" >> .env

          rsync -avzr \
            --exclude ".git" \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=yes" \
            ./docker-compose.yml ./traefik/ .env \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}/app/"

      - name: Deploy via SSH (docker compose up)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ${{ secrets.REMOTE_DIR }}/app
            export DOMAIN=${{ secrets.DOMAIN }}
            export TRAEFIK_EMAIL=${{ secrets.TRAEFIK_EMAIL }}
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose pull --quiet || true
            docker compose up -d --force-recreate

            # Wait for website container to become healthy (max 60s)
            echo "Waiting for website container to become healthy..."
            for i in {1..12}; do
              if docker inspect app-website-1 --format='{{.State.Health.Status}}' 2>/dev/null | grep -q "healthy"; then
                echo "Container is healthy!"
                break
              fi
              echo "Waiting... ($i/12)"
              sleep 5
            done

            docker compose ps
            docker image prune -f
